# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
par(mai=c(1.5,0.2,1.5,0.42))
return(heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10)))
}
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
plot(hc, cex = 0.4)
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
par(mai=c(1.02,0.82,0.82,0.42))
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
par(mai=c(3,0.82,0.8,0.1))
plot(hc, cex = 0.4)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
par(mai=c(1.5,0.2,1.5,0.42))
return(heatmap.2(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10)))
}
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
par(mai=c(1.02,0.82,0.82,0.42))
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
par(mai=c(3,0.82,0.8,0.1))
plot(hc, cex = 0.4)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
par(mai=c(1.02,0.82,0.82,0.42))
return(heatmap.2(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10)))
}
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.4)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
return(heatmap.2(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10)))
}
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
install.packages("heatmap.3")
pdf(file = "Usher_heatmap.pdf")
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.4)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
return(heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10)))
}
pdf(file = "Usher_heatmap.pdf")
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.4)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
return(heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10)))
}
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.4, hang = -1)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
return(heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10)))
}
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.6, hang = -1)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
return(heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10)))
}
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.6, hang = -1)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
par(mai=c(1.6,0.4,0.2,1.6))
hp <- heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10))
return(hp)
}
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.6, hang = -1)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
hp <- heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10), margins = c(6, 6))
return(hp)
}
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
?heatmap
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.6, hang = -1)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
hp <- heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10), margins = c(6, 6), cexRow = 0.4)
return(hp)
}
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.6, hang = -1)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
hp <- heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10), margins = c(6, 6),
cexRow = 0.5, cexCol = 0.9)
return(hp)
}
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.6, hang = -1)
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
hp <- heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10), margins = c(6, 6),
cexRow = 0.45, cexCol = 0.93)
return(hp)
}
pdf(file = "Usher_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
pdf(file = "Cluster3_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_usher_counts_evm_replaced.csv")
dev.off()
pdf(file = "Cluster3_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_cluster3_counts_evm_replaced.csv_counts_evm_replaced.csv")
dev.off()
pdf(file = "Cluster3_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_cluster3_counts_evm_replaced.csv")
dev.off()
source("lineplot_stages.R", echo = TRUE)
source("lineplot_stages.R", echo = TRUE, continue.echo = TRUE)
source("lineplot_stages.R", echo = TRUE, continue.echo = TRUE, max.deparse.length = 10000)
?source
source("lineplot_stages.R", echo = TRUE, max.deparse.length = 10000)
pdf(file = "Cluster3_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_cluster3_counts_evm_replaced.csv")
pdf(file = "Cluster3_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_cluster3_counts_evm_replaced.csv")
dev.off()
source("lineplot_stages.R")
lineplot_stages("mean_pou_gene_counts.csv", "POU")
pou_plot <- lineplot_stages("mean_pou_gene_counts.csv", "POU")
pou_plot
summary(pou_plot)
lineplot_stages("mean_pou_gene_counts.csv", "POU")
ggsave("POU_genes_lineplot.pdf")
source("hierarchical_clustering.R")
pdf(file = "POU_genes_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_pou_gene_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.6, hang = -1)
par(mai = c())
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
hp <- heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10), margins = c(6, 6),
cexRow = 0.6, cexCol = 0.93)
return(hp)
}
pdf(file = "POU_genes_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_pou_gene_counts_evm_replaced.csv")
dev.off()
heatmap.cordist <- function(file){
file_data <- read.csv(file, sep = "\t")
names(file_data) <- c("Gene", "E. Planula", "L. Planula", "Polyp",
"E. Strobila", "L. Strobila", "Ephyra", "Juvenile")
rownames(file_data) <- file_data$Gene
colnames(file_data)
file_data <- file_data[, -1]
# sort on max difference
min <- apply(file_data, 1, min)
max <- apply(file_data, 1, max)
s_file_data <- file_data[order(max - min, decreasing = T), ]
cor_matrix <- cor(t(s_file_data))
cor_dist_matrix <- 1-cor_matrix
plot(cor_dist_matrix, main = "Gene expression pairwise correlation distance",
xlab = "row", ylab = "column")
hc <- hclust(as.dist(cor_dist_matrix), method = "ward.D2")
plot(hc, cex = 0.6, hang = -1)
par(mai = c())
# cut tree at desired height (h = 0.5)
# gene_partition_assignments <- cutree(hc, h=0.5/100*max(hc$height))
library(gplots)
hp <- heatmap(as.matrix(s_file_data), Rowv = as.dendrogram(hc),
Colv = NA, col = greenred(10), margins = c(6, 6),
cexRow = 0.5, cexCol = 0.93)
return(hp)
}
pdf(file = "POU_genes_heatmap.pdf", width = 12, height = 8)
heatmap.cordist("mean_pou_gene_counts_evm_replaced.csv")
dev.off()
df <- read.csv("./data/cluster1_counts.txt")
head(df)
df <- read.csv("./data/cluster1_counts.txt")
head(df)
df <- read.table("./data/cluster1_counts.txt")
head(df)
df <- read.table("./data/cluster3_counts.txt")
head(df)
lineplot_stages("./data/mean_cluster3_counts.csv")
source("lineplot_stages.R", echo = TRUE, max.deparse.length = 10000)
lineplot_stages("./data/mean_cluster3_counts.csv")
lineplot_stages("./data/mean_cluster3_counts.csv", "Cluster 3")
source("lineplot_stages.R")
plots <- list()
# Cluster 1 genes
plots[[1]] <- lineplot_stages(file = "mean_cluster1_counts.csv", "Cluster 1")
# Cluster 1 genes
plots[[1]] <- lineplot_stages(file = "./data/mean_cluster1_counts.csv", "Cluster 1")
# Cluster 2 genes
plots[[2]] <- lineplot_stages(file = "./data/mean_cluster2_counts.csv", "Cluster 2")
# Cluster 3 genes
plots[[3]] <- lineplot_stages(file = "./data/mean_cluster3_counts.csv", "Cluster 3")
# Cluster 4 genes
plots[[4]] <- lineplot_stages(file = "./data/mean_cluster4_counts.csv", "Cluster 4")
# Cluster 5 genes
plots[[5]] <- lineplot_stages(file = "./data/mean_cluster5_counts.csv", "Cluster 5")
# Cluster 6 genes
plots[[6]] <- lineplot_stages(file = "./data/mean_cluster6_counts.csv", "Cluster 6")
# Cluster 7 genes
plots[[7]] <- lineplot_stages(file = "./data/mean_cluster7_counts.csv", "Cluster 7")
# Cluster 8 genes
plots[[8]] <- lineplot_stages(file = "./data/mean_cluster8_counts.csv", "Cluster 8")
library(gridExtra)
lineplots <- marrangeGrob(grobs = plots, nrow = 1, ncol = 1)
ggsave("all_cluster_expr_lineplots.png", lineplots)
lineplots <- marrangeGrob(grobs = plots, nrow = 2, ncol = 2)
lineplots
lineplots <- marrangeGrob(grobs = plots[[1:4]], nrow = 2, ncol = 2)
type(plots)
class(plots)
plots
plots[1] <- lineplot_stages(file = "./data/mean_cluster1_counts.csv", "Cluster 1")
plots[[1]] <- lineplot_stages(file = "./data/mean_cluster1_counts.csv", "Cluster 1")
plots <- list()
plots[1] <- lineplot_stages(file = "./data/mean_cluster1_counts.csv", "Cluster 1")
plots <- list()
plots[[1]] <- lineplot_stages(file = "./data/mean_cluster1_counts.csv", "Cluster 1")
# Cluster 2 genes
plots[[2]] <- lineplot_stages(file = "./data/mean_cluster2_counts.csv", "Cluster 2")
# Cluster 3 genes
plots[[3]] <- lineplot_stages(file = "./data/mean_cluster3_counts.csv", "Cluster 3")
# Cluster 4 genes
plots[[4]] <- lineplot_stages(file = "./data/mean_cluster4_counts.csv", "Cluster 4")
# Cluster 5 genes
plots[[5]] <- lineplot_stages(file = "./data/mean_cluster5_counts.csv", "Cluster 5")
# Cluster 6 genes
plots[[6]] <- lineplot_stages(file = "./data/mean_cluster6_counts.csv", "Cluster 6")
# Cluster 7 genes
plots[[7]] <- lineplot_stages(file = "./data/mean_cluster7_counts.csv", "Cluster 7")
# Cluster 8 genes
plots[[8]] <- lineplot_stages(file = "./data/mean_cluster8_counts.csv", "Cluster 8")
lineplots <- marrangeGrob(grobs = plots[[1]:[4]], nrow = 2, ncol = 2)
lineplots <- marrangeGrob(grobs = plots[[1]], nrow = 2, ncol = 2)
lineplots
head(plots)
lineplots <- marrangeGrob(grobs = plots[1:4], nrow = 2, ncol = 2)
lineplots
marrangeGrob(grobs = plots[1:4], nrow = 2, ncol = 2)
source("lineplot_stages.R")
lineplots <- marrangeGrob(grobs = plots, nrow = 2, ncol = 2)
lineplots
lineplots <- marrangeGrob(grobs = plots, nrow = 4, ncol = 2)
ggsave("all_cluster_expr_lineplots.pdf", lineplots)
ggsave("all_cluster_expr_lineplots.pdf", lineplots, width = 20,
height = 40)
ggsave("all_cluster_expr_lineplots.png", lineplots, width = 20,
height = 40)
heatmap.cordist("mean_pou_gene_counts_evm_replaced.csv")
heatmap.cordist("./data/mean_pou_gene_counts_evm_replaced.csv")
source("hierarchical_clustering.R")
source("hierarchical_clustering.R")
source("hierarchical_clustering.R")
heatmap.cordist("./data/mean_pou_gene_counts_evm_replaced.csv")
heatmap.cordist("./data/mean_pou_gene_counts_evm_replaced.csv")
